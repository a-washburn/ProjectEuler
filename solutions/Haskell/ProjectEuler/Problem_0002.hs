{-# LANGUAGE DoAndIfThenElse #-}
module ProjectEuler.Problem_0002
  ( answer
  , description
  , solution
  , main
  ) where

import System.Environment (getProgName)

import ProjectEuler.Internal.Parameters   ((~!?),getParameters,printHelpParamPassed)
import ProjectEuler.Problem_0002.Solution (solution)

defaultLimit :: Integer
defaultLimit = 4000000

answer :: Integer
answer = solution defaultLimit

description :: String
description
  = unlines
  [ "Each new term in the Fibonacci sequence is generated by adding"
  , "the previous two terms."
  , "By starting with 1 and 2, the first 10 terms will be:"
  , ""
  , "  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ..."
  , ""
  , "By considering the terms in the Fibonacci sequence whose values"
  , "do not exceed four million, find the sum of the even-valued terms."
  ]

main :: IO ()
main = do
  args <- getParameters
  if   printHelpParamPassed args
  then printHelp
  else print . solution . getLimit $ args

getLimit :: [String] -> Integer
getLimit = maybe defaultLimit id . (~!? 0)

printHelp :: IO ()
printHelp
    = getProgName
  >>= \ name -> putStrLn $ unlines
    [ "  Usage: " ++ name ++ " <limit>"
    , "  Calculates the sum of all even fibonacci numbers"
    , "  whose value is less then <limit>"
    , "    <limit> " ++ show defaultLimit ++ " :: Integer"
    ]
